{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","title","children","className","s","container","defaultProps","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","setState","this","Math","round","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b6649a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__1FLJ3\",\"title\":\"Statistics_title__38m0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2KB1U\",\"title\":\"Container_title__tpcVk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__1zU8t\",\"button\":\"FeedbackOptions_button__2bCgm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3N6IA\"};","import PropTypes from 'prop-types';\n\nimport s from './Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nContainer.defaultProps = {\n  title: ' ',\n};\n\nContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.container}>\n      {options.map(option => (\n        <button\n          type=\"button\"\n          className={s.button}\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n  options: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <div className={s.container}>\n        <p className={s.title}>Good: {good}</p>\n        <p className={s.title}>Neutral: {neutral}</p>\n        <p className={s.title}>Bad: {bad}</p>\n      </div>\n\n      <p className={s.title}>Total: {total}</p>\n      <p className={s.title}>Positive feedback: {positivePercentage}%</p>\n    </>\n  );\n}\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return (\n    <>\n      <p className={s.title}>{message}</p>\n    </>\n  );\n}\n\nNotification.defaultProps = {\n  message: ' ',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Container from './components/Container/Container';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState({ [option]: this.state[option] + 1 });\n  };\n\n  render() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    const positivePercentage = Math.round((this.state.good / total) * 100);\n\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Container title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Container>\n\n        <Container title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given!\" />\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}